# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(dplyr)
library(tidyr)
library(tibble)
devtools::install_github("debruine/faux")
library(faux)
library(janitor)
library(ggplot2)
library(scales)
install.packages("psych")
library(psych)
library(readr)
library(knitr)
library(kableExtra)
# set seed for reproducibility
set.seed(123)
# generate data
data_wide <-
faux::rnorm_multi(n = 100,
vars = 5,
mu = 3,
sd = 1,
r = 0.5,
varnames = paste0("item_", 1:5),
empirical = FALSE) %>%
rownames_to_column(var = "id")
# recode responses less than 1 or more than 5 to those values, then round scores to whole numbers
# note that {faux} has functions for doing this better
data_wide_likert <- data_wide %>%
mutate(across(starts_with("item_"), ~ round_half_up(.x, digits = 0))) %>%
mutate(across(starts_with("item_"), ~ ifelse(.x < 1, 1, ifelse(.x > 5, 5, .x))))
res_alpha <- data_wide_likert %>%
select(starts_with("item_")) %>%
psych::alpha()
cronbachs_alpha_estimate <- res_alpha$total$raw_alpha |>
round_half_up(digits = 2)
ggplot(data_wide_likert, aes(x = item_1)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_2)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_3)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_4)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
ggplot(data_wide_likert, aes(x = item_5)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw()
data_long <- data_wide_likert %>%
pivot_longer(cols = starts_with("item_"),
names_to = "item",
values_to = "response")
ggplot(data_long, aes(x = response)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
theme_linedraw() +
facet_wrap(~ item)
sum_scores <- data_long %>%
group_by(id) %>%
summarise(sum_score = sum(response))
ggplot(sum_scores, aes(x = sum_score)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
scale_x_continuous(breaks = breaks_pretty(n = 10)) +
theme_linedraw()
data_wide_again <- data_long %>%
pivot_wider(names_from = item,
values_from = response)
data_item_and_sum_scores <- data_wide_again %>%
left_join(sum_scores, by = "id")
View(data_item_and_sum_scores)
View(data_wide)
data_processed <- read_csv("../data/processed/data_processed.csv")
data_processed <- read_csv("C:/Users/timsc/Documents/GitHub/wrangling-course-assignments/week 8/intro to visualisation using ggplot/data/processed/data_processed.csv")
View(data_processed)
View(data_wide_likert)
data_processed_long <- data_processed %>%
pivot_longer(cols = "unique_id",
names_to = "item",
values_to = "response")
View(data_processed_long)
rm(data_processed_long)
View(data_wide)
View(data_long)
View(data_wide_again)
data_processed_long <- data_processed %>%
select(unique_id, age, gender, amp_score) %>%
pivot_longer(cols = "age", "gender", "amp_score",
names_to = "genderage",
values_to = "score")
data_processed_long <- data_processed %>%
pivot_longer(cols = "age", "gender", "amp_score",
names_to = "genderage",
values_to = "score")
ggplot(sum_scores, aes(x = sum_score)) +
geom_histogram(binwidth = 1, boundary = -0.5) +
scale_x_continuous(breaks = breaks_pretty(n = 10)) +
ThemePark::nemo_theme_colors
data_processed_long <- data_processed %>%
pivot_longer(cols = c(age, gender, amp_score),
names_to = "genderage",
values_to = "score")
data_processed_long <- data_processed %>%
as.character(age)
data_processed_long <- data_processed %>%
as.character("age")
data_processed_long <- data_processed %>%
as.character("age") %>%
pivot_longer(cols = c(age, gender, amp_score),
names_to = "genderage",
values_to = "score")
data_processed_long <- data_processed %>%
mutate(across(c(age, amp_score), as.character)) %>%
pivot_longer(cols = c(age, gender, amp_score),
names_to = "genderage",
values_to = "score")
View(data_processed_long)
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score")
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate(value = if_else(variable %in% c("age"), as.numeric(value), value))
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate(value = if_else(variable c("age"), as.numeric(value), value))
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate(value = if_else(c("age"), as.numeric(value), value))
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate(value = if_else(variable %in% c("age", "score"), as.numeric(value), value))
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate(across(c(age), as.numeric))
data_processed_long <- data_processed %>%
mutate(across(c(age), as.character)) %>%
pivot_longer(cols = c(age, gender),
names_to = "genderage",
values_to = "score") %>%
mutate("age", as.numeric))
test <- data_processed_long %>%
select(unique_id, genderage, score)
View(test)
# set knit options
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
# disable scientific notation
options(scipen = 999)
library(faux)
library(lme4)
library(ggplot2)
library(scales)
library(modelbased)
install.packages("modelbased")
library(modelbased)
library(see)
library(lavaan)
install.packages("see")
install.packages("lavaan")
library(see)
library(lavaan)
